name: Run ITensorGLMakie tests (Ubuntu)

on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.threads }} thread(s)
    runs-on: ${{ matrix.os }}
    env:
      JULIA_NUM_THREADS: ${{ matrix.threads }}
    strategy:
      matrix:
        version:
          - '1.6'
          - '1'
        os:
          - ubuntu-20.04
        threads:
          - '1'
        arch:
          - x64
        exclude:
          # MacOS not available on x86
          - {os: 'macOS-latest', arch: 'x86'}
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      - name: Install Julia dependencies and run tests
        run: |
          JULIA_REFERENCETESTS_UPDATE=true DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --depwarn=yes -e 'using Pkg; Pkg.activate(temp=true); Pkg.develop(path="./NDTensors"); Pkg.develop(path="."); Pkg.develop(path="./ITensorVisualizationBase"); Pkg.develop(path="./ITensorMakie"); Pkg.develop(path="./ITensorGLMakie"); Pkg.test("ITensorGLMakie")'
